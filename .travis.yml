env:
  global:
    # COVERITY_SCAN_TOKEN
    # ** specific to your project **
    - secure: "Iieqg-sANu2-csY1UiPAww"

language: cpp

compiler:
  - g++

os: linux

before_install:
  # g++5
  - if [ "$CXX" == "g++" ]; then sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test; fi
  - sudo apt-get update -qq

install:
  # g++5
  - if [ "$CXX" = "g++" ]; then sudo apt-get install -qq g++-5; fi
  - if [ "$CXX" = "g++" ]; then export CXX="g++-5"; fi

before_script:
  - mkdir build
  - cd build
  - cmake ..

script: make

addons:
  coverity_scan:

    # GitHub project metadata
    # ** specific to your project **
    project:
      name: vitalyos/metrika-demo
      version: 1.0
      description: Metrika demo

    # Where email notification of build analysis results will be sent
    notification_email: zsolt.vitalyos@gmail.com

    # Commands to prepare for build_command
    # ** likely specific to your build **
    build_command_prepend: cmake .

    # The command that will be added as an argument to "cov-build" to compile your project for analysis,
    # ** likely specific to your build **
    build_command: make

    # Pattern to match selecting branches that will run analysis. We recommend leaving this set to 'coverity_scan'.
    # Take care in resource usage, and consider the build frequency allowances per
    #   https://scan.coverity.com/faq#frequency
    branch_pattern: *
